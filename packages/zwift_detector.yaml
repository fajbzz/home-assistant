template:
  - binary_sensor:
    - name: trainer_over_3_watt
      state: "{{ states('sensor.shellyrulle_power')|float(default=0) > 3 }}"
      delay_off:
        minutes: 15
  - trigger: 
      - platform: state
        entity_id: sensor.qp_kjellerstue_humidity
    sensor:
      - name: zwift saved humidity 
        unit_of_measurement: '%'
        device_class: humidity
        state_class: measurement
        state: >
          {% set to_state = trigger.to_state.state|float(default=50) %}
          {% set last = states('sensor.zwift_saved_humidity')|float(default=to_state) %}
          {% set active = states('binary_sensor.zwift_active') %}
          {% set zwiftlap = states('device_tracker.zwiftlap') %}
          {{ to_state if (zwiftlap != 'home' and active == 'off') else
             to_state if (zwiftlap == 'home' and active == 'on' and to_state > last) else
             to_state if (zwiftlap == 'home' and active == 'off' and to_state < last) else 
             last }}
        attributes:
          before: >
            {% set to_state = trigger.to_state.state|float(default=50) %}
            {% set last = state_attr('sensor.zwift_saved_humidity', 'before')|float(default=to_state) %}
            {% set active = states('binary_sensor.zwift_active') %}
            {{ to_state if (to_state < last or active != 'on') else 
               last }}
    binary_sensor:
      - name: zwift_active
        state: >
          {% set active = states('binary_sensor.zwift_active') %}
          {% set zwift_hum = states('sensor.zwift_saved_humidity')|float %}
          {% set zwiftlap = states('device_tracker.zwiftlap') %}
          {% set trainer = states('switch.shellyrulle') %}
          {% set to_state = trigger.to_state.state|float %}
          {{ 'on' if (zwiftlap == 'home' and active == 'on' and (zwift_hum - to_state > 10.0)) else 
             'off' if (zwiftlap != 'home' or (2 <= now().hour < 5) or (zwift_hum - to_state) > 5.0) else 
             'on' if (zwiftlap == 'home' and (to_state - zwift_hum) > 1.0) else
             active }}

automation:
  - id: '1671655275820'
    alias: 'Set fanmode when zwifting'
    trigger:
      - platform: state
        entity_id: binary_sensor.zwift_active
        id: active
      - platform: state
        entity_id: switch.shellyrulle
        to: "off"
        id: rulle
      - platform: state
        entity_id: light.kjellerstuetak
        to: "off"
        id: lights
    action:
      - if:
          - condition: trigger
            id: active
          - condition: state
            entity_id: binary_sensor.zwift_active
            state: "on"
        then:
          - service: switch.turn_on
            target:
              entity_id: switch.shellybikefan
        else:
          - if:
              - condition: state
                entity_id: switch.shellyrulle
                state: "onnotoff"
            then:
              - service: switch.turn_off
                target:
                  entity_id: switch.shellyrulle
          - if:
              - condition: state
                entity_id: light.kjellerstuetak
                state: "on"
            then:
              - service: light.turn_off
                target:
                  entity_id: light.kjellerstuetak
          - if:
              - condition: state
                entity_id: switch.shellybikefan
                state: "on"
            then:
              - service: switch.turn_off
                target:
                  entity_id: switch.shellybikefan

  - id: '1704490413597'
    alias: 'Turn trainer on or off '
    trigger:
      - platform: state
        entity_id: device_tracker.zwiftlap
    action:
      - if: 
          - condition: state
            entity_id: device_tracker.zwiftlap
            state: 'home'
        then:
          - service: switch.turn_on
            target:
              entity_id: switch.shellyrulle
        else:
          - service: switch.turn_off
            target:
              entity_id: switch.shellyrulle
