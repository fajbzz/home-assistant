input_number:
  ev_battery_pack:
    unit_of_measurement: 'Wh'
    min: 13000
    max: 99000
    step: 500
    mode: box
  ev_max_charge:
    unit_of_measurement: 'W'
    min: 3600
    max: 22000
    step: 225
    mode: box
  ev_charge_steps:
    unit_of_measurement: 'W'
    min: 225
    max: 1800
    mode: box
  ev_min_charge:
    unit_of_measurement: 'W'
    min: 225
    max: 1800
    mode: box
  ev_charge_efficiency:
    unit_of_measurement: '%'
    max: 100
    min: 50
    step: 0.1
    mode: box

input_select: 
  why_charge:
    options:
      - Solar charging
      - User selected
      - No charging
      - Charge hours
      - Completed
      - Disconnected
      - Charging scheduled
input_boolean: 
  charge_now:
    name: Override schedule and charge now

input_datetime:
  holiday_until:
    has_date: true
    has_time: false

input_text: 
  known_soc: 
    max: 50
  
  
sensor: 
- platform: integration
  name: easee_energy
  source: sensor.easee_power
  method: left
  round: 2
  unit_prefix: k
  unit_time: h

utility_meter:
  easee_usage_hourly:
    source: sensor.easee_energy
    cycle: hourly
  easee_usage_monthly:
    source: sensor.easee_energy
    cycle: monthly

template:
  sensor:
  - name: easee_current_limit
    unit_of_measurement: A
    state: >
      {% set status_ts = states.sensor.easee_home_63089_status.last_updated.timestamp() %}
      {% if states('sensor.easee_current_limit') in ['unavailable'] %}
        {% if states('sensor.easee_home_63089_dynamic_charger_limit') in ['unavailable'] %}
          {{ 0 }}
        {% else %}
          {{ states('sensor.easee_home_63089_dynamic_charger_limit') }}
        {% endif %}
      {% elif now().timestamp() - states.sensor.easee_current_limit.last_updated.timestamp() < 300 or now().minute == 0 
              or (states('sensor.easee_home_63089_status') == 'charging' and now().timestamp() < status_ts + 300) %}
        {{ states('sensor.easee_current_limit')|int(default=16) }}
      {% else %}
        {% set so_far = states.sensor.energiforbruk_time.state|float * 1000 %}
        {% set power = states.sensor.amshan_power_import.state|float  %}
        {% set seconds_left = 3600 - now().minute * 60 - now().second %}
        {% set easee_power = states('sensor.easee_home_63089_power') | float * 1000 %}
        {% set no_easee_power = 0 if power < easee_power else power - easee_power %}
        {% set restofhour_energy = no_easee_power * seconds_left / 3600 %}
        {% set limit = states('sensor.rest_of_month_energy_limit')|int - 100 %}
        {% set availible = (limit - (so_far  + restofhour_energy)) * 3600 / seconds_left %}
        {% set ev_max = states('input_number.ev_max_charge')|int %}
        {% set ev_min = states('input_number.ev_min_charge')|int %}
        {% set ev_steps = states('input_number.ev_charge_steps')|int %}
        {{ ev_max/ ev_steps if availible > ev_max else 0 if availible < ev_min else (availible / ev_steps)|int + 1  }}
      {% endif %}
  - name: easee_power
    unit_of_measurement: W
    device_class: power
    state: '{{ states(''sensor.easee_home_63089_power'')|float(default=0)*1000 }}'
  - name: charge_hours
    state: >
      {% set by_subsides = states.sensor.power_usage_by_subsides_and_maxpower.state|from_json %}
      {{ by_subsides.easee|sort }}
  - name: soc_estimate
    unit_of_measurement: "%"
    state: >
      {% set known = states('input_text.known_soc')|from_json %}
      {% if is_state('input_select.why_charge', 'Completed') %}
        {{ 100 }}
      {% elif is_state('sensor.easee_home_63089_status',  'disconnected') %}
        {{ known.soc }}
      {% else %}
        {% set soc = known.soc|float %}
        {% set energy = states('sensor.easee_home_63089_session_energy') %}
        {% set energy = known.energy|float if energy in ['unknown', 'unavailable'] else 
                        energy|float - known.energy|float %}
        {% set soc = soc + energy * states('input_number.ev_charge_efficiency')|float * 1000  / states('input_number.ev_battery_pack')|int %}
        {{ 95 if soc > 95 else soc }}
      {% endif %}
  - name: easee_basic_schedule_start
    state: "{{ state_attr('binary_sensor.easee_home_63089_basic_schedule', 'schedule_chargeStartTime') }}"
  - name: easee_basic_schedule_stop
    state: "{{ state_attr('binary_sensor.easee_home_63089_basic_schedule', 'schedule_chargeStopTime') }}"


  binary_sensor:
  - name: wants_to_charge
    state: >
      {% set charge_hours = states('sensor.charge_hours')|from_json %}
      {{ (charge_hours|length > 0 and charge_hours[0]|int(default=24) == now().hour) or 
         (charge_hours|length > 1 and charge_hours[1]|int(default=24) == now().hour) or 
         states('sensor.estimate_soc')|float < 20.0 }}
  - name: easee_on
    state: '{{ states(''sensor.easee_home_63089_status'') == ''charging'' }}'
    delay_off: 
      minutes: 2

automation:
  - id: '1657578526896'
    alias: Easee daily commute schedule
    trigger:
    - platform: state
      entity_id:  input_boolean.kjorer_til_jobb
      id: kjorer_til_jobb
    - platform: state
      entity_id: sensor.easee_home_63089_status
      from: disconnected
      id: connected
    condition:
    - condition: template
      value_template: "{{ now().timestamp() > state_attr('input_datetime.holiday_until', 'timestamp') }}"
    action:
    - choose: 
      - conditions:
        - condition: time
          after: input_datetime.car_ready_charged
          weekday:
            - mon
            - tue
            - wed
            - thu
            - sun
        - condition: state
          entity_id: input_boolean.kjorer_til_jobb
          state: 'on'
        sequence:
        - service: input_datetime.set_datetime
          data:
            time: '07:00:00'
          target:
            entity_id: input_datetime.car_ready_charged
      - conditions:
        - condition: time
          after: input_datetime.car_ready_charged
          weekday:
            - fri
            - sat
        sequence:
        - service: input_datetime.set_datetime
          data:
            time: '09:00:00'
          target:
            entity_id: input_datetime.car_ready_charged
      default:
      - service: input_datetime.set_datetime
        data:
          time: '16:00:00'
        target:
          entity_id: input_datetime.car_ready_charged

  - id: '1657636827656'
    alias: Easee charger throttling
    description: ''
    trigger:
    - platform: state
      entity_id: sensor.easee_current_limit
    condition:
    - condition: or 
      conditions:
      - condition: state
        entity_id: sensor.easee_home_63089_status
        state: charging
      - condition: state
        entity_id: binary_sensor.easee_home_63089_basic_schedule
        state: 'on'
    action: 
    - service: easee.set_charger_dynamic_limit
      data:
        charger_id: EH630897
        current: "{{ states('sensor.easee_current_limit') }}"

  - id: '1663097253593'
    alias: Easee set schedule or start charging now
    trigger: 
    - platform: state
      entity_id: sensor.charge_hours
    - platform: state
      entity_id: input_boolean.charge_now
    condition:
    - condition: template
      value_template: "{{ states('sensor.charge_hours')|from_json|length > 0 }}"
    - condition: template
      value_template: >
        {{ states('sensor.charge_hours')|from_json|min > now().hour 
           or states('sensor.easee_home_63089_status') != 'charging' }}
    action:
    - if: 
      - condition: state
        entity_id: input_boolean.charge_now
        state: "off"
      then: 
        - service: easee.set_basic_charge_plan
          data:
            charger_id: EH630897
            start_datetime: >
              {% set start_hour = states('sensor.charge_hours')|from_json|min %}
              {% set start = now() + timedelta (hours=start_hour - now().hour, minutes=2-now().minute, seconds=-now().second) %}
              {{ (start|string)[:16] }}
            stop_datetime: >
              {% set done_hour = state_attr('input_datetime.car_ready_charged', 'hour') %}
              {% set done_hour = done_hour if (done_hour > 16 or states('sensor.easee_home_63089_status') == 'disconnected') else 17 %}
              {% set done_hour = done_hour if  done_hour > now().hour else  done_hour + 24 %}
              {% set done = now() + timedelta (hours = done_hour - now().hour, minutes=-now().minute, seconds=-now().second) %}
              {{ (done|string)[:16] }}
            repeat: true
      else: 
        - service: easee.delete_basic_charge_plan
          data:
            charger_id: EH630897
        - delay:
            seconds: 5
        - service: easee.resume
          data:
            charger_id: EH630897

  - id: '1663156755035'
    alias: Easee charger status change (schedule usage)
    description: ''
    trigger:
    - platform: state
      entity_id: sensor.easee_home_63089_status
      from: disconnected
      id: connected
    - platform: state
      entity_id: sensor.easee_home_63089_status
      to: disconnected
      id: disconnected
    - platform: state
      entity_id: sensor.easee_home_63089_status
      to: completed
      id: completed
    action:
    - choose: 
      - conditions:
        - condition: trigger
          id: completed
        sequence:
        - service: input_select.select_option
          data:
            option: 'Completed'
          target:
            entity_id: input_select.why_charge
        - service: easee.set_charger_dynamic_limit
          data:
            charger_id: EH630897
            current: 16
      - conditions:
        - condition: trigger
          id: disconnected
        sequence:
        - service: input_select.select_option
          data:
            option: 'Disconnected'
          target:
            entity_id: input_select.why_charge
        - service: easee.set_charger_dynamic_limit
          data:
            charger_id: EH630897
            current: 16
        - service: input_boolean.turn_off
          target:
            entity_id: input_boolean.charge_now
      - conditions:
        - condition: trigger
          id: connected
        sequence:
        - choose:
          - conditions:
            - condition: 
              - condition: numeric_state
                entity_id: sensor.soc_estimate
                below: 20
              - condition: state
                entity_id: input_boolean.charge_now
                state: "on"
            sequence:
            - service: easee.resume
              data:
                charger_id: EH630897
            - service: easee.set_charger_dynamic_limit
              data:
                charger_id: EH630897
                current: 16
          default:
          - service: input_select.select_option
            data:
              option: 'Charging scheduled'
            target:
              entity_id: input_select.why_charge

  - id: '1663885991498'
    alias: cache evnotify_soc and session_energy at start of charging session
    trigger: 
      - platform: state
        entity_id: sensor.evnotify_soc
    condition: 
      - condition: template
        value_template: "{{ states('sensor.evnotify_soc') not in ['unavailable', 'None'] }}"
    action: 
      - service: input_text.set_value
        data: 
          value: >
            {% set energy = states('sensor.easee_home_63089_session_energy')| int 
                            if states('sensor.easee_home_63089_status') == 'charging' else 0 %}
            {{ {'energy': energy, 
                'soc': states('sensor.evnotify_soc'), 
                'ts': state_attr('sensor.evnotify_soc', 'last_soc') }|to_json }}
        target: 
          entity_id: input_text.known_soc
