input_number:
  ev_battery_pack:
    unit_of_measurement: 'Wh'
    min: 13000
    max: 99000
    step: 500
    mode: box
  ev_max_charge:
    unit_of_measurement: 'W'
    min: 3600
    max: 22000
    step: 225
    mode: box
  ev_charge_steps:
    unit_of_measurement: 'W'
    min: 225
    max: 1800
    mode: box
  ev_min_charge:
    unit_of_measurement: 'W'
    min: 225
    max: 1800
    mode: box
  ev_charge_efficiency:
    unit_of_measurement: '%'
    max: 100
    min: 50
    step: 0.1
    mode: box

input_select: 
  why_charge:
    options:
      - Solar charging
      - User selected
      - No charging
      - Charge hours
      - Completed
      - Disconnected
      - Charging scheduled

input_datetime:
  holiday_until:
    has_date: true
    has_time: false
  
  
sensor: 
- platform: integration
  name: easee_energy
  source: sensor.easee_power
  method: left
  round: 2
  unit_prefix: k
  unit_time: h

template:
  sensor:
  - name: easee_current_limit
    unit_of_measurement: A
    state: >
      {% set status_ts = states.sensor.easee_home_63089_status.last_updated.timestamp() %}
      {% if states('sensor.easee_current_limit') in ['unavailable'] %}
        {% if states('sensor.easee_home_63089_dynamic_charger_limit') in ['unavailable'] %}
          {{ 0 }}
        {% else %}
          {{ states('sensor.easee_home_63089_dynamic_charger_limit') }}
        {% endif %}
      {% elif now().timestamp() - states.sensor.easee_current_limit.last_updated.timestamp() < 300 or now().minute == 0 
              or (states('sensor.easee_home_63089_status') == 'charging' and now().timestamp() < status_ts + 300) %}
        {{ states('sensor.easee_current_limit')|int(default=0) }}
      {% else %}
        {% set so_far = states.sensor.energiforbruk_time.state|float * 1000 %}
        {% set power = states.sensor.amshan_power_import.state|float  %}
        {% set seconds_left = 3600 - now().minute * 60 - now().second %}
        {% set easee_power = states('sensor.easee_home_63089_power') | float * 1000 %}
        {% set no_easee_power = 0 if power < easee_power else power - easee_power %}
        {% set restofhour_energy = no_easee_power * seconds_left / 3600 %}
        {% set limit = states('sensor.rest_of_month_energy_limit')|int - 100 %}
        {% set availible = (limit - (so_far  + restofhour_energy)) * 3600 / seconds_left %}
        {% set ev_max = states('input_number.ev_max_charge')|int %}
        {% set ev_min = states('input_number.ev_min_charge')|int %}
        {% set ev_steps = states('input_number.ev_charge_steps')|int %}
        {{ ev_max/ ev_steps if availible > ev_max else 0 if availible < ev_min else (availible / ev_steps)|int + 1  }}
      {% endif %}
  - name: easee_power
    unit_of_measurement: W
    device_class: power
    state: '{{ states(''sensor.easee_home_63089_power'')|float(default=0)*1000 }}'
  - name: charge_hours
    state: >
      {% set by_subsides = states.sensor.power_usage_by_subsides_and_maxpower.state|from_json %}
      {{ by_subsides.easee|sort }}
  - name: soc_estimate
    unit_of_measurement: "%"
    state: >
      {% set soc = states('sensor.soc_estimate')|float(default=50) %}
      {% if soc != 100 or is_state('sensor.easee_home_63089_status',  'disconnected') %}
        {% set soc = states('sensor.evnotify_soc')|float %}
        {% if is_state('sensor.easee_home_63089_status', 'completed') %}
          {% set soc = 100 %}
        {% elif is_state('sensor.easee_home_63089_status', 'disconnected') %}
          {% if states.sensor.evnotify_soc.last_updated <= 
             states.sensor.easee_home_63089_session_energy.last_updated %}
            {% set soc = 95 %}
          {% endif %}
        {% else %}
          {% if states.sensor.evnotify_soc.last_updated < 
           states.sensor.easee_home_63089_session_energy.last_updated %}
            {% set soc = soc + states('sensor.easee_home_63089_session_energy')|float * states('input_number.ev_charge_efficiency')|float * 1000  / states('input_number.ev_battery_pack')|int %}
            {% set soc = 95 if soc > 95 else soc %}
          {% endif %}  
        {% endif %}
      {% endif %}
      {{ soc }}

  binary_sensor:
  - name: wants_to_charge
    state: >
      {% set charge_hours = states('sensor.charge_hours')|from_json %}
      {{ (charge_hours|length > 0 and charge_hours[0]|int(default=24) == now().hour) or 
         (charge_hours|length > 1 and charge_hours[1]|int(default=24) == now().hour) or 
         states('sensor.estimate_soc')|float < 20.0 }}
  - name: easee_on
    state: '{{ states(''sensor.easee_home_63089_status'') == ''charging'' }}'
    delay_off: 
      minutes: 2
  - name: charge_hours_override
    state: >
      {% set l = namespace (prices=[]) %}
      {% set now_price = states('sensor.template_energy_by_subsides_and_production')|float %}
      {% set prices = state_attr('sensor.template_energy_by_subsides_and_production','prices') %}
      {% set hours = states.sensor.charge_hours.state|from_json %}
      {% for hour in hours %}
      {% set l.prices = l.prices + [ prices[hour] ] %}
      {% endfor %}
      {{ states.sensor.easee_current_limit.state|int > 0 
         and l.prices|length > 0 and l.prices|max >= now_price|float }}

automation:
  - id: '1657578526896'
    alias: Easee daily commute schedule
    trigger:
    - platform: state
      entity_id:  input_boolean.kjorer_til_jobb
      id: kjorer_til_jobb
    - platform: state
      entity_id: sensor.easee_home_63089_status
      from: disconnected
      id: connected
    condition:
    - condition: template
      value_template: "{{ now().timestamp() > state_attr('input_datetime.holiday_until', 'timestamp') }}"
    action:
    - choose: 
      - conditions:
        - condition: time
          after: input_datetime.car_ready_charged
          weekday:
            - mon
            - tue
            - wed
            - thu
            - sun
        - condition: state
          entity_id: input_boolean.kjorer_til_jobb
          state: 'on'
        sequence:
        - service: input_datetime.set_datetime
          data:
            time: '07:00:00'
          target:
            entity_id: input_datetime.car_ready_charged
      - conditions:
        - condition: time
          after: input_datetime.car_ready_charged
          weekday:
            - fri
            - sat
        sequence:
        - service: input_datetime.set_datetime
          data:
            time: '09:00:00'
          target:
            entity_id: input_datetime.car_ready_charged
      default:
      - service: input_datetime.set_datetime
        data:
          time: '16:00:00'
        target:
          entity_id: input_datetime.car_ready_charged

  - id: '1657636827656'
    alias: Easee charger throttling
    description: ''
    trigger:
    - platform: state
      entity_id: sensor.easee_current_limit
    condition:
    - condition: or 
      conditions:
      - condition: state
        entity_id: sensor.easee_home_63089_status
        state: charging
      - condition: state
        entity_id: binary_sensor.easee_home_63089_basic_schedule
        state: 'on'
    action: 
    - service: easee.set_charger_dynamic_limit
      data:
        charger_id: EH630897
        current: "{{ states('sensor.easee_current_limit') }}"

  - id: '1663097253593'
    alias: Easee set schedule
    trigger: 
    - platform: state
      entity_id: sensor.charge_hours
    condition:
    - condition: template
      value_template: "{{ states('sensor.charge_hours')|from_json|length > 0 }}"
    action:
      - service: easee.set_basic_charge_plan
        data:
          charger_id: EH630897
          start_datetime: >
            {% set start_hour = states('sensor.charge_hours')|from_json|min %}
            {% set start = now() + timedelta (hours=start_hour - now().hour, minutes=2-now().minute, seconds=-now().second) %}
            {{ (start|string)[:16] }}
          stop_datetime: >
            {% set done_hour = state_attr('input_datetime.car_ready_charged', 'hour') %}
            {% set done_hour = done_hour if  done_hour > now().hour else  done_hour + 24 %}
            {% set done = now() + timedelta (hours = done_hour - now().hour, minutes=59-now().minute, seconds=-now().second) %}
            {{ (done|string)[:16] }}
          repeat: true

  - id: '1616512764082'
    alias: Easee start trigger (no schedule)
    description: ''
    trigger:
    - platform: template
      value_template: >
        {% set state = states('sensor.easee_home_63089_status') %}
        {% set hours = states('sensor.charge_hours')|from_json %}
        {% set limit = states.sensor.easee_current_limit.state|int %}
        {{ (now().minute > 0 and limit > 0 and state == 'awaiting_start'
           and (hours|length == 0 or hours[0] == now().hour))
           or (state == 'charging' and states.sensor.evnotify_soc.state|int > 20 and hours|length > 0 and hours[0] != now().hour) }}
    action: 
      - choose: 
        - conditions:
          - condition: template
            value_template: >
              {% set hours = states('sensor.charge_hours')|from_json %}
              {{ hours|length == 0 or hours[0] == now().hour }}
          sequence:
          - service: easee.resume
            data:
              charger_id: EH630897
          - service: easee.set_charger_dynamic_limit
            data:
              charger_id: EH630897
              current: "{{ states('sensor.easee_current_limit') }}"
          - service: input_select.select_option
            data:
              option: 'Charge hours'
            target:
              entity_id: input_select.why_charge
        - conditions:
          - condition: template
            value_template: >
              {% set hours = states('sensor.charge_hours')|from_json %}
              {{ hours|length > 0 and hours[0] != now().hour and states.sensor.evnotify_soc.state|int > 20 }}
          - condition: template
            value_template: >
              {{ states('sensor.easee_home_63089_status') == 'charging' }}
          sequence:
          - service: easee.pause
            data:
              charger_id: EH630897
          - service: input_select.select_option
            data:
              option: 'No charging'
            target:
              entity_id: input_select.why_charge

  - id: '1657649088080'
    alias: Easee charger status change (no schedule)
    description: ''
    trigger:
    - platform: state
      entity_id: sensor.easee_home_63089_status
      from: disconnected
      id: connected
    - platform: state
      entity_id: sensor.easee_home_63089_status
      to: disconnected
      id: disconnected
    - platform: state
      entity_id: sensor.easee_home_63089_status
      to: completed
      id: completed
    action:
    - choose: 
      - conditions:
        - condition: trigger
          id: completed
        sequence:
        - service: input_select.select_option
          data:
            option: 'Completed'
          target:
            entity_id: input_select.why_charge
        - service: easee.set_charger_dynamic_limit
          data:
            charger_id: EH630897
            current: 16
      - conditions:
        - condition: trigger
          id: disconnected
        sequence:
        - service: input_select.select_option
          data:
            option: 'Disconnected'
          target:
            entity_id: input_select.why_charge
        - service: easee.set_charger_dynamic_limit
          data:
            charger_id: EH630897
            current: 16
      - conditions:
        - condition: trigger
          id: connected
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: binary_sensor.wants_to_charge
              state: 'on'
            sequence:
            - service: easee.resume
              data:
                charger_id: EH630897
            - service: input_select.select_option
              data:
                option: 'Charge hours'
              target:
                entity_id: input_select.why_charge
          - conditions:
            - condition: numeric_state
              entity_id: sensor.ev_soc
              below: 20
            sequence:
            - service: easee.resume
              data:
                charger_id: EH630897
            - service: easee.set_charger_dynamic_limit
              data:
                charger_id: EH630897
                current: 16
          default:
          - service: easee.pause
            data:
              charger_id: EH630897
          - service: input_select.select_option
            data:
              option: 'No charging'
            target:
              entity_id: input_select.why_charge

  - id: '1663156755035'
    alias: Easee charger status change (schedule usage)
    description: ''
    trigger:
    - platform: state
      entity_id: sensor.easee_home_63089_status
      from: disconnected
      id: connected
    - platform: state
      entity_id: sensor.easee_home_63089_status
      to: disconnected
      id: disconnected
    - platform: state
      entity_id: sensor.easee_home_63089_status
      to: completed
      id: completed
    action:
    - choose: 
      - conditions:
        - condition: trigger
          id: completed
        sequence:
        - service: input_select.select_option
          data:
            option: 'Completed'
          target:
            entity_id: input_select.why_charge
        - service: easee.set_charger_dynamic_limit
          data:
            charger_id: EH630897
            current: 16
      - conditions:
        - condition: trigger
          id: disconnected
        sequence:
        - service: input_select.select_option
          data:
            option: 'Disconnected'
          target:
            entity_id: input_select.why_charge
        - service: easee.set_charger_dynamic_limit
          data:
            charger_id: EH630897
            current: 16
      - conditions:
        - condition: trigger
          id: connected
        sequence:
        - choose:
          - conditions:
            - condition: numeric_state
              entity_id: sensor.ev_soc
              below: 20
            sequence:
            - service: easee.resume
              data:
                charger_id: EH630897
            - service: easee.set_charger_dynamic_limit
              data:
                charger_id: EH630897
                current: 16
          default:
          - service: input_select.select_option
            data:
              option: 'Charging scheduled'
            target:
              entity_id: input_select.why_charge

