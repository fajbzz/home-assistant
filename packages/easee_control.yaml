input_number:
  ev_battery_pack:
    unit_of_measurement: 'Wh'
    min: 13000
    max: 99000
    step: 500
    mode: box
  ev_max_charge:
    unit_of_measurement: 'W'
    min: 3600
    max: 22000
    step: 225
    mode: box
  ev_charge_steps:
    unit_of_measurement: 'W'
    min: 225
    max: 1800
    mode: box
  ev_min_charge:
    unit_of_measurement: 'W'
    min: 225
    max: 1800
    mode: box
  ev_charge_efficiency:
    unit_of_measurement: '%'
    max: 100
    min: 50
    step: 0.1
    mode: box
  ev_charge_target:
    unit_of_measurement: '%'
    max: 100
    min: 70
    step: 5

input_select: 
  which_car:
    options:
      - Polestar
      - Ioniq
      - Gjestelading
      - Ukjent

input_datetime:
  holiday_until:
    has_date: true
    has_time: false

input_text: 
  known_soc: 
    max: 50
  
sensor: 
- platform: integration
  name: easee_energy
  source: sensor.easee_power
  method: left
  round: 2
  unit_prefix: k
  unit_time: h

utility_meter:
  easee_usage_hourly:
    source: sensor.easee_energy
    cycle: hourly
  easee_usage_monthly:
    source: sensor.easee_energy
    cycle: monthly

template:
  - sensor:
    - name: easee_current_limit
      unit_of_measurement: A
      state: >
        {% set status_ts = states.sensor.easee_home_63089_status.last_updated.timestamp() %}
        {% if states('sensor.easee_current_limit') in ['unavailable'] %}
          {% if states('sensor.easee_home_63089_dynamic_charger_limit') in ['unavailable'] %}
            {{ 0 }}
          {% else %}
            {{ states('sensor.easee_home_63089_dynamic_charger_limit') }}
          {% endif %}
        {% elif now().timestamp() - states.sensor.easee_current_limit.last_updated.timestamp() < 300 or now().minute == 0 
                or (states('sensor.easee_home_63089_status') == 'charging' and now().timestamp() < status_ts + 300) %}
          {{ states('sensor.easee_current_limit')|int(default=16) }}
        {% else %}
          {% set so_far = states.sensor.energiforbruk_time.state|float * 1000 %}
          {% set power = states.sensor.amshan_power_import.state|float  %}
          {% set seconds_left = 3600 - now().minute * 60 - now().second %}
          {% set easee_power = states('sensor.easee_home_63089_power') | float * 1000 %}
          {% set no_easee_power = 0 if power < easee_power else power - easee_power %}
          {% set restofhour_energy = no_easee_power * seconds_left / 3600 %}
          {% set limit = states('sensor.rest_of_month_energy_limit')|int - 100 %}
          {% set availible = (limit - (so_far  + restofhour_energy)) * 3600 / seconds_left %}
          {% set ev_max = states('input_number.ev_max_charge')|int %}
          {% set ev_min = states('input_number.ev_min_charge')|int %}
          {% set ev_steps = states('input_number.ev_charge_steps')|int %}
          {{ ev_max/ ev_steps if availible > ev_max else 0 if availible < ev_min else (availible / ev_steps)|int + 1  }}
        {% endif %}
    - name: easee_power
      unit_of_measurement: W
      device_class: power
      state: '{{ states(''sensor.easee_home_63089_power'')|float(default=0)*1000 }}'
    - name: charge_hours
      state: >
        {% set by_subsides = states.sensor.power_usage_by_subsides_and_maxpower.state|from_json %}
        {{ by_subsides.easee|sort }}
    - name: easee_basic_schedule_start
      state: "{{ state_attr('binary_sensor.easee_home_63089_basic_schedule', 'schedule_chargeStartTime') }}"
    - name: easee_basic_schedule_stop
      state: "{{ state_attr('binary_sensor.easee_home_63089_basic_schedule', 'schedule_chargeStopTime') }}"
  - binary_sensor:
    - name: wants_to_charge
      state: >
        {% set charge_hours = states('sensor.charge_hours')|from_json %}
        {{ (charge_hours|length > 0 and charge_hours[0]|int(default=24) == now().hour) or 
           (charge_hours|length > 1 and charge_hours[1]|int(default=24) == now().hour) or 
           states('sensor.estimate_soc')|float < 20.0 }}
    - name: easee_on
      state: "{{ states('sensor.easee_home_63089_status') == 'charging' }}"
      delay_off: 
        minutes: 2
  - trigger:
      - platform: state
        entity_id: 
          - sensor.rypse2_soc
          - sensor.easee_home_63089_session_energy
    sensor:
    - name: soc_estimate
      unit_of_measurement: "%"
      state: >
        {% set soc = states('sensor.rypse2_soc')|float %}
        {% set soc = (soc if soc > 1 else soc * 100)|int %}
        {% if (trigger.entity_id != 'sensor.rypse2_soc') and 
              (states('sensor.easee_home_63089_status') == 'charging' ) %}
          {% set session = states('sensor.easee_home_63089_session_energy') | float %}
          {% set efficiency = states('input_number.ev_charge_efficiency') | float %}
          {% set battery = states('input_number.ev_battery_pack') | int %}
          {% set charged = session * 1000 * efficiency / 100 %}
          {% set energy = soc * battery / 100 %}
          {{ ((energy + charged) / battery  * 100) | round(1) }}
        {% else %}
          {{ soc }}
        {% endif %}

automation:
  - id: '1691265354404'
    alias: Select car to charge or not
    trigger:
    - platform: state
      entity_id: sensor.easee_home_63089_status
      from: 'disconnected'
    - platform: state
      entity_id: person.amalie_johansen
      to: 'home'
    - platform: state
      entity_id: binary_sensor.rypse2_chargeportconnected
      to: 'on'
    - platform: numeric_state
      entity_id: sensor.template_rypse2_loc
      below: 0.01
    action:
    - service: input_select.select_option
      data:
        option: >
          {% set last = states('input_select.which_car') %}
          {% set unconnected = is_state ('sensor.easee_home_63089_status', 'disconnected') %}
          {% set ah_home = is_state('person.amalie_johansen', 'home') %}
          {% set rp2_connected = is_state('binary_sensor.rypse2_chargeportconnected', 'on') %}
          {% set rp2_home = states('sensor.template_rypse2_loc') |float(default=10) < 0.01 %}
          {{ 'Polestar' if rp2_home and rp2_connected else
              last if unconnected else 
             'Ioniq' if ah_home else
             'Ukjent'  }}
      target:
        entity_id: input_select.which_car
    - if:
      - condition: state
        entity_id: input_select.which_car
        state: "Ukjent"
      - condition: not
        conditions:
          - condition: state
            entity_id: sensor.easee_home_63089_status
            state: disconnected
      then: 
        - service: notify.mobile_app_xq_au52
          data:
            message: Ser ut som ukjent bil har koblet seg til laderen.
            title: Easeelader @ rypeveien

  - id: '1691611803561'
    alias: resume Easee charger if set to charge
    trigger: 
      - platform: state
        entity_id: input_select.which_car
      - platform: template
        value_template: >
          {% set hours = states('sensor.charge_hours')|from_json %}
          {{ hours|length > 0 and hours[0] <= now().hour }}
    condition:
      - condition: or
        conditions:
          - condition: and
            conditions:
              - condition: state
                entity_id: input_select.which_car
                state: Polestar
              - condition: or
                conditions:
                - condition: numeric_state
                  entity_id: sensor.soc_estimate
                  below: 20
                - condition: template
                  value_template: >
                    {% set hours = states('sensor.charge_hours')|from_json %}
                    {{ hours|length > 0 and hours[0] <= now().hour }}
          - condition: state
            entity_id: input_select.which_car
            state: Ioniq
          - condition: state
            entity_id: input_select.which_car
            state: Gjest
    action:
      - service: easee.resume
        data:
          charger_id: EH630897

  - id: '1691611803661'
    alias: Pause Easee charger if not set to charge
    trigger: 
      - platform: state
        entity_id: sensor.easee_home_63089_status
        to: charging
      - platform: numeric_state
        entity_id: sensor.soc_estimate
        above: 20
      - platform: template
        value_template: >
          {% set hours = states('sensor.charge_hours')|from_json %}
          {{ hours|length == 0 or hours[0] > now().hour }}
    condition:
      - condition: state
        entity_id: sensor.easee_home_63089_status
        state: charging
      - condition: or
        conditions:
          - condition: and
            conditions:
              - condition: state
                entity_id: input_select.which_car
                state: Polestar
              - condition: numeric_state
                entity_id: sensor.soc_estimate
                above: 20
              - condition: template
                value_template: >
                  {% set hours = states('sensor.charge_hours')|from_json %}
                  {{ hours|length == 0 or hours[0] > now().hour }}
          - condition: state
            entity_id: input_select.which_car
            state: Ukjent
    action:
      - service: easee.pause
        data:
          charger_id: EH630897

  - id: '1657636827656'
    alias: Easee charger throttling
    description: ''
    trigger:
    - platform: state
      entity_id: sensor.easee_current_limit
    condition:
    - condition: or 
      conditions:
      - condition: state
        entity_id: sensor.easee_home_63089_status
        state: charging
      - condition: state
        entity_id: binary_sensor.easee_home_63089_basic_schedule
        state: 'on'
    action: 
    - service: easee.set_charger_dynamic_limit
      data:
        charger_id: EH630897
        current: "{{ states('sensor.easee_current_limit') }}"

  - id: '1680332588223'
    alias: cache known soc and timestamp when ev_charge_state changes
    trigger: 
      - platform: state
        entity_id: sensor.ev_charge_state
    action: 
      - service: input_text.set_value
        data: 
          value: >
            {% set energy = 0 if states('sensor.easee_home_63089_status') == 'disconnected' else 
                            states('sensor.easee_home_63089_session_energy')| int %}
            {{ {'energy': energy, 
                'soc': states('sensor.ev_charge_state'),
                'ts': now().timestamp()|int }|to_json }}
        target: 
          entity_id: input_text.known_soc

  - id: '1689617707052'
    alias: reset charge target when disconnects
    trigger: 
      - platform: state
        entity_id: sensor.easee_home_63089_status
        to: disconnected
    condition:
      - condition: numeric_state
        entity_id: input_number.ev_charge_target
        above: 85
    action: 
      - service: input_number.set_value
        data: 
          value: 85
        target: 
          entity_id: input_number.ev_charge_target
