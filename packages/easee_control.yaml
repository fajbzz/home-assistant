input_number:
  ev_battery_pack:
    unit_of_measurement: 'Wh'
    min: 13000
    max: 99000
    step: 500
    mode: box
  ev_max_charge:
    unit_of_measurement: 'W'
    min: 3600
    max: 22000
    step: 225
    mode: box
  ev_charge_steps:
    unit_of_measurement: 'W'
    min: 225
    max: 1800
    mode: box
  ev_min_charge:
    unit_of_measurement: 'W'
    min: 225
    max: 1800
    mode: box
  ev_charge_efficiency:
    unit_of_measurement: '%'
    max: 100
    min: 50
    step: 0.1
    mode: box
  
template:
  sensor:
  - name: easee_power
    unit_of_measurement: W
    device_class: power
    state: '{{ states(''sensor.easee_home_63089_power'')|float(default=0)*1000 }}'
  - name: wanted_easee_hours
    unit_of_measurement: 'Hours'
    state: >
      {% set SoC = states('input_number.ladestatus') | float(default=50) %}
      {{ ((1-SoC/100)*28/states('input_number.ladefart')|float(default=2) + 0.5)|round(0) }}
  - name: charge_hours
    state: >
      {% set by_subsides = states.sensor.power_usage_by_subsides_and_maxpower.state|from_json %}
      {{ by_subsides.easee|sort }}
  - name: charge_current
    unit_of_measurement: A
    state: >
      {% set current = 0 %}
      {% set usage = states.sensor.power_usage_by_subsides_and_maxpower.state|from_json %}
      {% if usage.easee|length > 0 and usage.easee[0] == now().hour %}
      {% set ev_max_charge = states.input_number.ev_max_charge.state|int %}
      {% set ev_min_charge = states.input_number.ev_min_charge.state|int %}
      {% set ev_charge_steps = states.input_number.ev_charge_steps.state|int %}
      {% set tank_power = 2700 %}
      {% set kjeller_power = 1700 %}
      {% set energy_limit = states('rest_of_month_energy_limit')|int %}
      {% set v = namespace (base=[], tank = [], kjeller = [], needed_charge = 0, easee = [], usage=[]) %}
      {% set uctrld = states.input_text.uncontrolled_estimate.state|from_json %}
      {% set pvguess = states.sensor.pv_guess_by_factor.state|from_json %}
      {% set prices = states.sensor.template_energy_by_subsides_and_production.attributes.prices[now().hour:] %}
      {% set availible = energy_limit - uctrld[now().hour] + pvguess[0] %}
      {% if usage.vvtank|length > 0 and usage.vvtank[0] == now().hour %}
      {% set availible = availible - tank_power %}
      {% endif %}
      {% if usage.vvkjeller|length > 0 and usage.vvkjeller[0] == now().hour %}
      {% set availible = availible - kjeller_power %}
      {% endif %}
      {% set current = (ev_max_charge if availible > ev_max_charge else 0 if availible < ev_min_charge else (availible / ev_charge_steps)|int * ev_charge_steps)|int / 225 %}
      {% endif %}
      {{ current }}

  binary_sensor:
  - name: wants_to_charge
    state: >
      {% set charge_hours = states('sensor.charge_hours')|from_json %}
      {{ (charge_hours|length > 0 and charge_hours[0].hour|int(default=24) == now().hour) or 
         (charge_hours|length > 1 and charge_hours[1].hour|int(default=24) == now().hour) }}
  - name: easee_on
    state: '{{ states(''sensor.easee_home_63089_status'') == ''charging'' }}'
    delay_off: 
      minutes: 2

automation:
  - id: '1616512764082'
    alias: Easee kontroll
    description: ''
    trigger:
    - platform: state
      entity_id:  input_boolean.kjorer_til_jobb
      id: kjorer_til_jobb
    - platform: state
      entity_id:  sensor.charge_hours
      id: charge_hours
    - platform: state
      entity_id:  binary_sensor.wants_to_charge
      id: triggercharge
    - platform: state
      entity_id: sensor.easee_home_63089_status
      from: disconnected
      id: connected
    - platform: state
      entity_id: sensor.easee_home_63089_status
      to: disconnected
      id: disconnected
    - platform: state
      entity_id: sensor.easee_home_63089_status
      to: completed
      id: completed
    - platform: state
      entity_id: sensor.evnotify_soc
      id: evnotify
    condition:
    - condition: template
      value_template: '{{ states.automation.sjekk_ladestatus_ved_tilkobling.attributes.current == 0 }}'
    variables:
      easee_on_ts: >
        {{ as_timestamp(states.binary_sensor.easee_on.last_updated if states.binary_sensor.easee_on != 'None' else now()) }} 
      ladestatus_ts: '{{ states.input_number.ladestatus.last_updated.timestamp() }}' 
      last_hour: >
        {{ states.binary_sensor.easee_on.last_updated.hour if easee_on_ts > ladestatus_ts else 
           states.input_number.ladestatus.last_updated.hour }}
      last_hour_ts: >
        {{ easee_on_ts if easee_on_ts > ladestatus_ts else ladestatus_ts }}
    action:
    - choose: 
      - conditions:
        - condition: trigger
          id: completed
        sequence:
        - service: input_number.set_value
          data: 
            value: 100
          target:
            entity_id: input_number.ladestatus
        - service: input_select.select_option
          data:
            option: 'No charging'
          target:
            entity_id: input_select.why_charge
      - conditions:
        - condition: trigger
          id: evnotify
        - condition: template
          value_template: '{{ now().timestamp() - state_attr(''sensor.evnotify_soc'', ''last_soc'') <= 300  }}'
        sequence:
        - service: input_number.set_value
          data: 
            value: '{{ trigger.to_state.state }}'
          target:
            entity_id: input_number.ladestatus
      - conditions:
        - condition: state
          entity_id: binary_sensor.easee_on
          state: 'on'
        - condition: template
          value_template: '{{ now().hour != last_hour }}'
        - condition: template
          value_template: '{{ now().timestamp() - state_attr(''sensor.evnotify_soc'', ''last_soc'') > 360  }}'
        - condition: template
          value_template: >
            {% set SoC = states('input_number.ladestatus')|float %}
            {{ SoC < 99 - (states('input_number.ladefart')|float(default=2) / 28) * 100 }}
        sequence:
        - service: input_number.set_value
          target:
            entity_id: input_number.ladestatus
          data:
            value: >
              {% set addSoC = states('input_number.ladefart')|float(default=2)*(now().timestamp()-last_hour_ts)/1008 %}
              {{ (states('input_number.ladestatus')|float(default=50) + addSoC)|round(1) }}
      - conditions:
        - condition: trigger
          id: disconnected
        sequence:
        - choose:
          - conditions:
              - condition: time
                weekday:
                  - fri
                  - sat
            sequence:
              - service: input_datetime.set_datetime
                data:
                  time: '09:00:00'
                target:
                  entity_id: input_datetime.car_ready_charged
          - conditions:
              - condition: template
                value_template: "{{ states.input_boolean.kjorer_til_jobb.state == 'off' }}"
            sequence:
              - service: input_datetime.set_datetime
                data:
                  time: '16:00:00'
                target:
                  entity_id: input_datetime.car_ready_charged
          default:
          - service: input_datetime.set_datetime
            data:
              time: '07:00:00'
            target:
              entity_id: input_datetime.car_ready_charged
        - service: input_select.select_option
          data:
            option: 'No charging'
          target:
            entity_id: input_select.why_charge
        - condition: state
          entity_id: switch.easee_home_63089_enable_idle_current
          state: 'off'
        - service: easee.pause
          data:
            charger_id: EH630897
      default: []
    - choose:
      - conditions:
        - condition: state
          entity_id: binary_sensor.wants_to_charge
          state: 'on'
        - condition: template
          value_template: '{{ is_state (''sensor.easee_home_63089_status'', ''awaiting_start'') }}'
        sequence:
        - condition: state
          entity_id: binary_sensor.easee_on
          state: 'off'
        - service: easee.resume
          data:
            charger_id: EH630897
        - service: input_select.select_option
          data:
            option: 'Charge hours'
          target:
            entity_id: input_select.why_charge
      - conditions:
        - condition: trigger
          id: connected
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: binary_sensor.wants_to_charge
              state: 'on'
            sequence:
            - service: easee.resume
              data:
                charger_id: EH630897
            - service: input_select.select_option
              data:
                option: 'Charge hours'
              target:
                entity_id: input_select.why_charge
          default:
          - service: easee.pause
            data:
              charger_id: EH630897
          - service: input_select.select_option
            data:
              option: 'No charging'
            target:
              entity_id: input_select.why_charge
      - conditions:
        - condition: template
          value_template: '{{ (states(''sensor.charge_hours'')|from_json)[0].hour|int(default=24) == now().hour }}'
        - condition: template
          value_template: '{{ states(''sensor.easee_home_63089_status'') == ''awaiting_start'' }}'
        sequence:
        - service: easee.resume
          data:
            charger_id: EH630897
        - service: input_select.select_option
          data:
            option: 'Charge hours'
          target:
            entity_id: input_select.why_charge
      - conditions:
        - condition: template
          value_template: '{{ (states(''sensor.charge_hours'')|from_json)[0].hour|int(default=24) != now().hour }}'
        - condition: template
          value_template: '{{ states(''sensor.easee_home_63089_status'') == ''charging'' }}'
        sequence:
        - service: easee.pause
          data:
            charger_id: EH630897
        - service: input_select.select_option
          data:
            option: 'No charging'
          target:
            entity_id: input_select.why_charge
      default: []
    mode: single

  - id: '1656018672107'
    alias: Easee charge current
    description: ''
    trigger:
    - platform: state
      entity_id:  sensor.charge_current
    condition:
    - condition: numeric_state
      entity_id: sensor.charge_current
      above: '0'
    action:
    - service: easee.set_charger_dynamic_limit
      data:
        charger_id: EH630897
        current: '{{ states.sensor.charge_current.state }}'
      
      
    
