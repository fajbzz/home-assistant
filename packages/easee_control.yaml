input_number:
  ev_battery_pack:
    unit_of_measurement: 'Wh'
    min: 13000
    max: 99000
    step: 500
    mode: box
  ev_max_charge:
    unit_of_measurement: 'W'
    min: 3600
    max: 22000
    step: 225
    mode: box
  ev_charge_steps:
    unit_of_measurement: 'W'
    min: 225
    max: 1800
    mode: box
  ev_min_charge:
    unit_of_measurement: 'W'
    min: 225
    max: 1800
    mode: box
  ev_charge_efficiency:
    unit_of_measurement: '%'
    max: 100
    min: 50
    step: 0.1
    mode: box

input_select: 
  why_charge:
    options:
      - Solar charging
      - User selected
      - No charging
      - Charge hours
      - Completed
      - Disconnected

input_datetime:
  holiday_until:
    has_date: true
    has_time: false
  
  
template:
  sensor:
  - name: easee_power
    unit_of_measurement: W
    device_class: power
    state: '{{ states(''sensor.easee_home_63089_power'')|float(default=0)*1000 }}'
  - name: charge_hours
    state: >
      {% set by_subsides = states.sensor.power_usage_by_subsides_and_maxpower.state|from_json %}
      {{ by_subsides.easee|sort }}
  - name: soc_estimate
    unit_of_measurement: "%"
    state: >
      {% set soc = states('sensor.soc_estimate')|float(default=50) %}
      {% if soc != 100 or is_state('sensor.easee_home_63089_status',  'disconnected') %}
        {% set soc = states('sensor.evnotify_soc')|float %}
        {% if is_state('sensor.easee_home_63089_status', 'completed') %}
          {% set soc = 100 %}
        {% elif is_state('sensor.easee_home_63089_status', 'disconnected') %}
          {% if states.sensor.evnotify_soc.last_updated <= 
             states.sensor.easee_home_63089_session_energy.last_updated %}
            {% set soc = 95 %}
          {% endif %}
        {% else %}
          {% if states.sensor.evnotify_soc.last_updated < 
           states.sensor.easee_home_63089_session_energy.last_updated %}
            {% set soc = soc + states('sensor.easee_home_63089_session_energy')|float * states('input_number.ev_charge_efficiency')|float * 1000  / states('input_number.ev_battery_pack')|int %}
            {% set soc = 95 if soc > 95 else soc %}
          {% endif %}  
        {% endif %}
      {% endif %}
      {{ soc }}

  binary_sensor:
  - name: wants_to_charge
    state: >
      {% set charge_hours = states('sensor.charge_hours')|from_json %}
      {{ (charge_hours|length > 0 and charge_hours[0]|int(default=24) == now().hour) or 
         (charge_hours|length > 1 and charge_hours[1]|int(default=24) == now().hour) or 
         states('sensor.estimate_soc')|float < 20.0 }}
  - name: easee_on
    state: '{{ states(''sensor.easee_home_63089_status'') == ''charging'' }}'
    delay_off: 
      minutes: 2

automation:
  - id: '1657578526896'
    alias: Easee daily commute schedule
    trigger:
    - platform: state
      entity_id:  input_boolean.kjorer_til_jobb
      id: kjorer_til_jobb
    - platform: state
      entity_id: sensor.easee_home_63089_status
      from: disconnected
      id: connected
    condition:
    - condition: template
      value_template: "{{ now().timestamp() > state_attr('input_datetime.holiday_until', 'timestamp') }}"
    action:
    - choose: 
      - conditions:
        - condition: time
          after: input_datetime.car_ready_charged
          weekday:
            - mon
            - tue
            - wed
            - thu
            - sun
        - condition: state
          entity_id: input_boolean.kjorer_til_jobb
          state: 'on'
        sequence:
        - service: input_datetime.set_datetime
          data:
            time: '07:00:00'
          target:
            entity_id: input_datetime.car_ready_charged
      - conditions:
        - condition: time
          after: input_datetime.car_ready_charged
          weekday:
            - fri
            - sat
        sequence:
        - service: input_datetime.set_datetime
          data:
            time: '09:00:00'
          target:
            entity_id: input_datetime.car_ready_charged
      default:
      - service: input_datetime.set_datetime
        data:
          time: '16:00:00'
        target:
          entity_id: input_datetime.car_ready_charged

  - id: '1657636827656'
    alias: Easee charger throttling
    description: ''
    trigger:
    - platform: template
      value_template: >
        {% set every5 = (now().minute % 5) == 4 %}
        {% set charging = states('sensor.easee_home_63089_status') == 'charging' %}
        {{ every5 and charging }}
    variables:
      current: >
        {% set current = states('sensor.easee_home_63089_current')|float %}
        {% set min = states('input_number.ev_min_charge')|int / states('input_number.ev_charge_steps')|int %}
        {{ min if current < min else current }}
      power: "{{ states('sensor.easee_home_63089_power')|float * 1000 }}"
    action: 
      - choose: 
        - conditions:
          - condition: template
            value_template: >
              {{ states('sensor.energy_this_hour_estimate')|float * 1000 > 
                      states('sensor.rest_of_month_energy_limit')|float }}
          sequence:
          - choose: 
            - conditions:
              - condition: template
                value_template: >
                  {{ power - states('input_number.ev_charge_steps')|float >
                      states('input_number.ev_min_charge')|float }}
              sequence:
              - service: easee.set_charger_dynamic_limit
                data:
                  charger_id: EH630897
                  current: "{{ current|int - 1 }}"
            default:
            - service: easee.pause
              data:
                charger_id: EH630897
            - service: input_select.select_option
              data:
                option: 'No charging'
              target:
                entity_id: input_select.why_charge
        - conditions:
          - condition: template
            value_template: >
              {{ states('sensor.energy_this_hour_estimate')|float * 1000 +
                      states('input_number.ev_charge_steps')|float < 
                      states('sensor.rest_of_month_energy_limit')|float }}
          - condition: template
            value_template: >
              {{ power + states('input_number.ev_charge_steps')|float < 
                  states('input_number.ev_max_charge')|float }}
          sequence:
          - service: easee.set_charger_dynamic_limit
            data:
              charger_id: EH630897
              current: "{{ current|int + 2 }}"

  - id: '1616512764082'
    alias: Easee start trigger
    description: ''
    trigger:
    - platform: state
      entity_id: 
        - sensor.charge_hours
    action: 
      - choose: 
        - conditions:
          - condition: template
            value_template: >
              {% set hours = states('sensor.charge_hours')|from_json %}
              {{ hours|length > 0 and hours[0] == now().hour or
                 hours|length > 1 and hours[1] == now().hour }}
          - condition: template
            value_template: >
              {{ states('sensor.easee_home_63089_status') == 'awaiting_start' }}
          sequence:
          - service: easee.resume
            data:
              charger_id: EH630897
          - service: easee.set_charger_dynamic_limit
            data:
              charger_id: EH630897
              current: 16
          - service: input_select.select_option
            data:
              option: 'Charge hours'
            target:
              entity_id: input_select.why_charge
        - conditions:
          - condition: template
            value_template: >
              {% set hours = states('sensor.charge_hours')|from_json %}
              {{ hours|length == 0 or hours[0] != now().hour }}
          - condition: template
            value_template: >
              {{ states('sensor.easee_home_63089_status') == 'charging' }}
          sequence:
          - service: easee.pause
            data:
              charger_id: EH630897
          - service: input_select.select_option
            data:
              option: 'No charging'
            target:
              entity_id: input_select.why_charge

  - id: '1657649088080'
    alias: Easee charger status change
    description: ''
    trigger:
    - platform: state
      entity_id: sensor.easee_home_63089_status
      from: disconnected
      id: connected
    - platform: state
      entity_id: sensor.easee_home_63089_status
      to: disconnected
      id: disconnected
    - platform: state
      entity_id: sensor.easee_home_63089_status
      to: completed
      id: completed
    action:
    - choose: 
      - conditions:
        - condition: trigger
          id: completed
        sequence:
        - service: input_select.select_option
          data:
            option: 'Completed'
          target:
            entity_id: input_select.why_charge
      - conditions:
        - condition: trigger
          id: disconnected
        sequence:
        - service: input_select.select_option
          data:
            option: 'Disconnected'
          target:
            entity_id: input_select.why_charge
      - conditions:
        - condition: trigger
          id: connected
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: binary_sensor.wants_to_charge
              state: 'on'
            sequence:
            - service: easee.resume
              data:
                charger_id: EH630897
            - service: input_select.select_option
              data:
                option: 'Charge hours'
              target:
                entity_id: input_select.why_charge
          default:
          - service: easee.pause
            data:
              charger_id: EH630897
          - service: input_select.select_option
            data:
              option: 'No charging'
            target:
              entity_id: input_select.why_charge

#  - id: '1616512764082'
#    alias: Easee kontroll
#    description: ''
#    trigger:
#    - platform: state
#      entity_id: sensor.evnotify_soc
#      id: evnotify
#    variables:
#      easee_on_ts: >
#        {{ as_timestamp(states.binary_sensor.easee_on.last_updated if states.binary_sensor.easee_on != 'None' else now()) }} 
#      ladestatus_ts: '{{ states.input_number.ladestatus.last_updated.timestamp() }}' 
#      last_hour: >
#        {{ states.binary_sensor.easee_on.last_updated.hour if easee_on_ts > ladestatus_ts else 
#           states.input_number.ladestatus.last_updated.hour }}
#      last_hour_ts: >
#        {{ easee_on_ts if easee_on_ts > ladestatus_ts else ladestatus_ts }}
#    action:
#    - choose: 
#      - conditions:
#        - condition: trigger
#          id: evnotify
#        - condition: template
#          value_template: '{{ now().timestamp() - state_attr(''sensor.evnotify_soc'', ''last_soc'') <= 300  }}'
#        sequence:
#        - service: input_number.set_value
#          data: 
#            value: '{{ trigger.to_state.state }}'
#          target:
#            entity_id: input_number.ladestatus
#      - conditions:
#        - condition: state
#          entity_id: binary_sensor.easee_on
#          state: 'on'
#        - condition: template
#          value_template: '{{ now().hour != last_hour }}'
#        - condition: template
#          value_template: '{{ now().timestamp() - state_attr(''sensor.evnotify_soc'', ''last_soc'') > 360  }}'
#        - condition: template
#          value_template: >
#            {% set SoC = states('input_number.ladestatus')|float %}
#            {{ SoC < 99 - (states('input_number.ladefart')|float(default=2) / 28) * 100 }}
#        sequence:
#        - service: input_number.set_value
#          target:
#            entity_id: input_number.ladestatus
#          data:
#            value: >
#              {% set addSoC = states('input_number.ladefart')|float(default=2)*(now().timestamp()-last_hour_ts)/1008 %}
#              {{ (states('input_number.ladestatus')|float(default=50) + addSoC)|round(1) }}
#        - condition: state
#          entity_id: switch.easee_home_63089_enable_idle_current
#          state: 'off'
#        - service: easee.pause
#          data:
#            charger_id: EH630897
#      default: []
#    - choose:
#      - conditions:
#        - condition: trigger
#          id: connected
#        sequence:
#        - choose:
#          - conditions:
#            - condition: state
#              entity_id: binary_sensor.wants_to_charge
#              state: 'on'
#            sequence:
#            - service: easee.resume
#              data:
#                charger_id: EH630897
#            - service: input_select.select_option
#              data:
#                option: 'Charge hours'
#              target:
#                entity_id: input_select.why_charge
#          default:
#          - service: easee.pause
#            data:
#              charger_id: EH630897
#          - service: input_select.select_option
#            data:
#              option: 'No charging'
#            target:
#              entity_id: input_select.why_charge
#      default: []
#    mode: single

