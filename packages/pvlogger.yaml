utility_meter:
  pvlogger_hourly:
    source: sensor.pvlogger_power
    cycle: hourly
  
rest:
  - resource: "http://localhost/restproxy/pvlogger_factor.php"
    scan_interval: 3600
    sensor: 
      - name: pvlogger_factor
        value_template: '{{ value_json|to_json }}'

template:
  - sensor:
    - name: pv_guess_by_factor
      state: >
        {% set numbers = states.input_text.met_cache.state|from_json %}
        {% set factors = states.sensor.pvlogger_factor.state|from_json %}
        {% set potentials = states.input_text.met2_potential_max.state|from_json %}
        {% set potentials = potentials + potentials %}
        {% set local = namespace(guess=[]) %}
        {% for number in numbers %}
          {% set num2fac = factors[number]|float(2) if factors[number] is defined else 0.1 %}
          {% set local.guess = local.guess + [ (num2fac * potentials[loop.index-1])|int ] %}
        {% endfor %}
        {{ local.guess }}
    - name: pv_guess_this_hour
      state: >
        {{ (states.sensor.pv_guess_by_factor.state|from_json)[now().hour] }}
    - name: pv_guess_12h
      state: >
        {{ (states.sensor.pv_guess_by_factor.state|from_json)[now().hour+12] }}
    - name: pv_guess_24h
      state: >
        {{ (states.sensor.pv_guess_by_factor.state|from_json)[now().hour+24] }}

automation: 
  - id: '1658480557485'
    alias: 'Update solar potentiale cache'
    trigger: 
    - platform: state
      entity_id: sensor.pvlogger_potentiale
    action:
    - service: input_text.set_value
      data:
        value: "{{ states('sensor.pvlogger_potentiale') }}"
      target: 
        entity_id: input_text.met2_potential_max
