timer:
  frigate_silencer:
    duration: 00:05:00
    restore: true

template:
  - trigger: 
      platform: mqtt
      topic: frigate/events
    sensor:
      - unique_id: last_frigate_event
        state: >
          {% set lastid = states('sensor.last_frigate_event') %}
          {% set lastts = state_attr('sensor.last_frigate_event', 'ts')|int(default=0) %}
          {% set after = trigger.payload_json['after'] %}
          {% set ts = after["start_time"]|int(default=0) %}
          {{ after['id'] if lastid in ['unknown'] or ts > lastts else lastid }}
        attributes:
          ts: >
            {% set lastts = state_attr('sensor.last_frigate_event', 'ts')|int(default=0) %}
            {% set after = trigger.payload_json['after'] %}
            {% set ts = after["start_time"]|int(default=0) %}
            {{ ts if lastid in ['unknown'] or ts > lastts else lastts }}
          label: >
            {% set lastlabel = state_attr('sensor.last_frigate_event','label') %}
            {% set lastts = state_attr('sensor.last_frigate_event', 'ts')|int(default=0) %}
            {% set after = trigger.payload_json['after'] %}
            {% set ts = after["start_time"]|int(default=0) %}
            {% set label = after["label"] %}
            {{ label if lastid in ['unknown'] or ts > lastts else lastlabel }}

automation:
  - id: '1660990404933'
    alias: Frigate notify
    trigger:
      platform: state
      entity_id: sensor.template_last_frigate_event
    variables:
      ext_address: !secret ext_address
    condition:
      - condition: state
        entity_id: binary_sensor.anyone_home
        state: "off"
    action:
      - choose:
        - conditions: 
          - condition: state
            entity_id: timer.frigate_silencer
            state: idle
          sequence:
          - service: timer.start
            entity_id: timer.frigate_silencer
          - service: notify.mobile_app_xq_au52
            data_template:
              message: "A {{state_attr('sensor.template_last_frigate_event', 'label')}} was detected."
              data:
                image: "{{ ext_address }}/api/frigate/notifications/{{states('sensor.template_last_frigate_event')}}/thumbnail.jpg?format=android"
                tag: "{{states('sensor.template_last_frigate_event')}}"
                when: "{{state_attr('sensor.template_last_frigate_event', 'ts')}}"

  - id: '1660990404934'
    alias: Frigate timer
    trigger:
      platform: event
      event_type: timer_finished
      event_data:
        entity_id: timer.frigate_silencer
    variables:
      ext_address: !secret ext_address
      last_frigate: "{{ states('input_text.frigate_last')|from_json }}"
    action:
      - choose:
        - conditions: 
          - condition: template
            value_template: >
              {% set count = last_frigate.count if last_frigate.count is defined else 0 %}
              {{ count > 1 }}
          sequence:
          - service: timer.start
            entity_id: timer.frigate_silencer
          - service: notify.mobile_app_xq_au52
            data_template:
              message: 'A {{last_frigate.msg}} was detected {{ last_frigate.count }} time(s).'
              data:
                image: '{{ ext_address }}/api/frigate/notifications/{{last_frigate.id}}/thumbnail.jpg?format=android'
                tag: '{{last_frigate.id}}'
                when: '{{last_frigate.ts}}'
      - service: input_text.set_value
        target:
          entity_id: input_text.frigate_last
        data:
          value: >
            {{ { 'msg': last_frigate.msg, 'id': last_frigate.id, 'ts': last_frigate.ts, 'count': 0}|to_json }}

  - id: '1661326781305'
    alias: Turn frigate recordings on or off
    trigger: 
      platform: template
      value_template: "{{ (states('lock.dana_oppe') == 'locked' or states('binary_sensor.anyone_home') == 'off') != (states('switch.inngang_recordings') == 'on') }}"
    action:
      - service: switch.toggle
        target:
          entity_id: switch.inngang_recordings

