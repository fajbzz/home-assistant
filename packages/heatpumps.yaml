template:
  sensor: 
  - name: livingroom_temp
    unit_of_measurement: "°C"
    state: >
      {% set netatmo = states('sensor.netatmo_stue_temperature') %}
      {% set vp_air = states('sensor.vp_oppe_air_temperature') %}
      {% set vdor = states('sensor.verandador_temperature') %}
      {% set netatmo = [] if netatmo in ['unavailable', 'unknown'] else [netatmo|float] %}
      {% set vp_air = [] if vp_air in ['unavailiale', 'unknown'] or vp_air|float >= 50 else [vp_air|float] %}
      {% set vdor = [] if vdor in  ['unavailible', 'unknown'] else [vdor|float] %}
      {{ (netatmo + vp_air + vdor)|average|round(1) }}
  - name: basement_temp
    unit_of_measurement: "°C"
    state: >
      {% set lumi = states('sensor.lumi_kjeller_temperature') %}
      {% set vp_air = states('sensor.vp_nede_air_temperature') %}
      {% set lumi = [] if lumi in ['unavailable', 'unknown'] else [lumi|float] %}
      {% set vp_air = [] if vp_air in ['unavailable', 'unknown'] or vp_air|float >= 50 else [vp_air|float] %}
      {{ (lumi + vp_air)|average|round(1) }}


  binary_sensor:
  - name: hot_outside
    state: "{{ states('sensor.netatmo_rypeveien_netatmo_ute_temperature')|float(default=10) > 25 }}"
    delay_on:
      minutes: 20
  - name: hot_livingroom
    state: >
      {{ states('sensor.netatmo_rypeveien_netatmo_temperature')|float(default=20) > 25 
         or states('sensor.vp_oppe_air_temperature')|float(default=20) > 25}}
    delay_on:
      minutes: 30

switch: 
  - platform: template
    switches: 
      vpoppe_onoff:
        value_template: "{{states('sensor.stikk_vp_oppe_power')|int > 50 }}"
        turn_on:
        turn_off:
      vpnede_onoff:
        value_template: "{{states('sensor.stikk_vp_nede_power')|int > 50 }}"
        turn_on:
          - service: climate.set_hvac_mode
            data:
              hvac_mode: heat
            target:
              entity_id: climate.vp_nede
        turn_off:
          - service: climate.set_preset_mode
            data:
              preset_mode: "Fan"
            target:
              entity_id: climate.vp_nede

climate:
  - platform: generic_thermostat
    name: vp_goppe
    heater: switch.vpoppe_onoff
    target_sensor: sensor.livingroom_temp
    target_temp_step: 1
    min_temp: 17
    max_temp: 28
  - platform: generic_thermostat
    name: vp_gnede
    heater: switch.vpnede_onoff
    target_sensor: sensor.basement_temp
    target_temp_step: 1
    min_temp: 17
    max_temp: 28

schedule:
  livingroom_schedule:
    name: "Livingroom schedule"
    monday: 
      - from: "14:30:00"
        to: "21:00:00"
    tuesday:
      - from: "07:30:00"
        to: "12:00:00"
      - from: "16:00:00"
        to: "21:00:00"
    wednesday:
      - from: "07:30:00"
        to: "12:00:00"
      - from: "16:00:00"
        to: "21:00:00"
    thursday: 
      - from: "14:30:00"
        to: "21:00:00"
    friday: 
      - from: "14:30:00"
        to: "21:00:00"
    saturday:
      - from: "09:00:00"
        to: "21:00:00"
    sunday:
      - from: "09:00:00"
        to: "21:00:00"

automation: 
  - id: '1658673475311'
    alias: 'Climate VP Oppe Start cooling '
    description: ''
    trigger:
    - platform: template
      value_template: >
        {{ states('binary_sensor.hot_livingroom') == 'on'
           and states('binary_sensor.hot_outside')  == 'on'
           and states('sensor.pvlogger_power')|int(default=0) > 2000
           and states('binary_sensor.dor_inngang_on') == 'off'
           and states('binary_sensor.verandador_contact') == 'off' }}
    condition:
    - condition: device
      device_id: c26046a34e1fac9463da2e9fe2b62a84
      domain: climate
      entity_id: climate.vp_oppe
      type: is_hvac_mode
      hvac_mode: 'off'
    action:
    - device_id: c26046a34e1fac9463da2e9fe2b62a84
      domain: climate
      entity_id: climate.vp_oppe
      type: set_hvac_mode
      hvac_mode: cool
    - service: climate.set_temperature
      data:
        temperature: 25
      target:
        entity_id: climate.vp_oppe
    mode: single

  - id: '1658673749726'
    alias: Climate VP oppe Turn off when idle for 20 hours
    description: ''
    trigger:
    - platform: numeric_state
      entity_id: sensor.stikk_vp_oppe_power
      for:
        hours: 30
        minutes: 0
        seconds: 0
      below: '50'
    condition:
    - condition: device
      device_id: c26046a34e1fac9463da2e9fe2b62a84
      domain: climate
      entity_id: climate.vp_oppe
      type: is_hvac_mode
      hvac_mode: 'cool'
    action:
    - device_id: c26046a34e1fac9463da2e9fe2b62a84
      domain: climate
      entity_id: climate.vp_oppe
      type: set_hvac_mode
      hvac_mode: 'off'
    mode: single

  - id: '1661848057589'
    alias: Refresh air temp values periodically
    trigger: 
    - platform: time_pattern
      minutes: '/12'
    action: 
    - service: zwave_js.refresh_value
      data:
        entity_id: 
          - sensor.vv_tank_air_temperature
          - sensor.vp_oppe_air_temperature
          - sensor.vp_nede_air_temperature

  - id: '1663912913996'
    alias: Analyzer-adjust heat-pump upstairs temperature 
    trigger:
      - platform: template
        value_template: >
          {{ now().minute < 59 and state_attr('climate.vp_goppe', 'temperature') + 
             states('sensor.analyzer_updown')|int  +
             (1 if states('schedule.livingroom_schedule') == 'on' else 0) != 
             state_attr('climate.vp_oppe','temperature') }}
    condition:
      - condition: template
        value_template: >
          {{ states('sensor.analyzer_updown') in ['-1', '0', '1'] }}
      - condition: template
        value_template: >
          {{ trigger.entity_id != 'sensor.analyzer_updown' or 
             trigger.from_state.state in ['-1', '0', '1'] }}
      - condition: template
        value_template: "{{ now().minute < 59 }}"
    action:
      - choose:
        - conditions: 
          - condition: template
            value_template: "{{ states('climate.vp_oppe') == 'heat' }}"
          sequence: 
          - service: climate.set_temperature
            data: 
              temperature: >
                {{ state_attr('climate.vp_goppe', 'temperature') + 
                   states('sensor.analyzer_updown')|int +
                   (1 if states('schedule.livingroom_schedule') == 'on' else 0)  }}
            target:
              entity_id: climate.vp_oppe
        - conditions: 
          - condition: template
            value_template: "{{ states('climate.vp_oppe') == 'cool' }}"
          sequence: 
          - service: climate.set_temperature
            data: 
              temperature: >
                {{ state_attr('climate.vp_goppe', 'temperature') - states('sensor.analyzer_updown')|int }}
            target:
              entity_id: climate.vp_oppe

  - id: '1663912913997'
    alias: Analyzer-adjust heat-pump downstairs temperature 
    trigger:
      - platform: template
        value_template: >
          {{ now().minute < 59 and state_attr('climate.vp_gnede', 'temperature') + states('sensor.analyzer_updown')|int != 
             state_attr('climate.vp_nede','temperature') }}
    condition:
      - condition: template
        value_template: >
          {{ states('sensor.analyzer_updown') in ['-1', '0', '1'] }}
      - condition: template
        value_template: >
          {{ trigger.entity_id != 'sensor.analyzer_updown' or 
             trigger.from_state.state in ['-1', '0', '1'] }}
      - condition: template
        value_template: "{{ now().minute < 59 }}"
      - condition: state
        entity_id: climate.vp_gnede
        state: 'heat'
    action:
      - choose:
        - conditions: 
          - condition: template
            value_template: "{{ states('climate.vp_nede') == 'heat' }}"
          sequence: 
          - service: climate.set_temperature
            data: 
              temperature: >
                {% set target = state_attr('climate.vp_gnede', 'temperature') + states('sensor.analyzer_updown')|int %}
                {{ target if target >= 17 else 17 }}
            target:
              entity_id: climate.vp_nede
        - conditions: 
          - condition: template
            value_template: "{{ states('climate.vp_nede') == 'cool' }}"
          sequence: 
          - service: climate.set_temperature
            data: 
              temperature: >
                {{ state_attr('climate.vp_gnede', 'temperature') - states('sensor.analyzer_updown')|int }}
            target:
              entity_id: climate.vp_nede

  - id: '1665986905409'
    alias: Set HVAC mode for downstairs heatpump
    trigger:
      - platform: state
        entity_id: sensor.vp_nede_wanted_mode
    action:
      - choose:
        - conditions:
          - condition: state
            entity_id: sensor.vp_nede_wanted_mode
            state: heat
          sequence: 
            - service: climate.set_hvac_mode
              data:
                hvac_mode: "{{ states('sensor.vp_nede_wanted_mode') }}"
              target:
                entity_id: climate.vp_nede
        - conditions:
          - condition: state
            entity_id: sensor.vp_nede_wanted_mode
            state: Fan
          sequence: 
            - service: climate.set_preset_mode
              data:
                preset_mode: "{{ states('sensor.vp_nede_wanted_mode') }}"
              target:
                entity_id: climate.vp_nede
      - service: notify.persistent_notification
        data:
          message: "set vp_nede mode {{states('sensor.vp_nede_wanted_mode') }}"
