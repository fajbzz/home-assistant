input_boolean:
  downstairs_price_adjust:
    name: turn on/off adjustment of downstairs heatpump
    
template:
  sensor: 
  - name: livingroom_temp
    unit_of_measurement: "°C"
    state: >
      {% set netatmo = states('sensor.netatmo_stue_temperature') %}
      {% set vdor = states('sensor.verandador_temperature') %}
      {% set netatmo = [] if netatmo in ['unavailable', 'unknown'] else [netatmo|float] %}
      {% set vdor = [] if vdor in  ['unavailible', 'unknown'] else [vdor|float] %}
      {{ (netatmo + vdor)|average|round(1) }}
  - name: basement_temp
    unit_of_measurement: "°C"
    state: >
      {% set qp = states('sensor.qp_kjellerstue_temperature') %}
      {% set lumi = states('sensor.lumi_kjeller_temperature') %}
      {% set qp = [] if qp in ['unavailable', 'unknown'] else [qp|float] %}
      {% set lumi = [] if lumi in ['unavailable', 'unknown'] else [lumi|float] %}
      {{ (lumi + qp)|average|round(1) }}
  - name: basement_humidity
    unit_of_measurement: "%"
    state: >
      {% set qp = states('sensor.qp_kjellerstue_humidity') %}
      {% set lumi = states('sensor.lumi_kjeller_humidity') %}
      {% set qp = [] if qp in ['unavailable', 'unknown'] else [qp|float] %}
      {% set lumi = [] if lumi in ['unavailable', 'unknown'] else [lumi|float] %}
      {{ (lumi + qp)|average|round(1) }}

  binary_sensor:
  - name: hot_outside
    state: "{{ states('sensor.netatmo_rypeveien_netatmo_ute_temperature')|float(default=10) > 25 }}"
    delay_on:
      minutes: 20
  - name: hot_livingroom
    state: >
      {{ states('sensor.livingroom_temp')|float(default=20) > 25 }}
    delay_on:
      minutes: 30
  - name: vpnede_onoff
    state: "{{ states('sensor.stikk_vp_nede_power')|int(default=0) > 1 }}"
  - name: vpoppe_onoff
    state: "{{ states('sensor.stikk_vp_oppe_power')|int(default=0) > 1 }}"
  - name: schedule_adjust
    state: >
      {% set holiday_until = as_datetime(states('input_datetime.holiday_until')).timestamp() %}
      {% set schedule = states('schedule.livingroom_schedule') %}
      {{ now().timestamp() > holiday_until and schedule == 'on' }}

switch: 
  - platform: template
    switches: 
      vpoppe_onoff:
        value_template: "{{ states('sensor.stikk_vp_oppe_power')|int(default=0) > 50 }}"
        turn_on:
        turn_off:
      vpnede_onoff:
        value_template: "{{ states('sensor.stikk_vp_nede_power')|int(default=0) > 50 }}"
        turn_on:
        turn_off:

climate:
  - platform: generic_thermostat
    name: vp_goppe
    heater: switch.vpoppe_onoff
    target_sensor: sensor.livingroom_temp
    target_temp_step: 1
    min_temp: 17
    max_temp: 28
  - platform: generic_thermostat
    name: vp_gnede
    heater: switch.vpnede_onoff
    target_sensor: sensor.basement_temp
    target_temp_step: 1
    min_temp: 17
    max_temp: 28

schedule:
  livingroom_schedule:
    name: "Livingroom schedule"
    monday: 
      - from: "14:30:00"
        to: "21:00:00"
    tuesday:
      - from: "07:30:00"
        to: "12:00:00"
      - from: "16:00:00"
        to: "21:00:00"
    wednesday:
      - from: "07:30:00"
        to: "12:00:00"
      - from: "16:00:00"
        to: "21:00:00"
    thursday: 
      - from: "14:30:00"
        to: "21:00:00"
    friday: 
      - from: "14:30:00"
        to: "21:00:00"
    saturday:
      - from: "09:00:00"
        to: "21:00:00"
    sunday:
      - from: "09:00:00"
        to: "21:00:00"

automation: 
  - id: '1658673475311'
    alias: 'Climate VP Oppe Start cooling '
    description: ''
    trigger:
    - platform: template
      value_template: >
        {{ states('binary_sensor.hot_livingroom') == 'on'
           and states('binary_sensor.hot_outside')  == 'on'
           and states('sensor.pvlogger_power')|int(default=0) > 2000
           and states('binary_sensor.dor_inngang_on') == 'off'
           and states('binary_sensor.verandador_contact') == 'off' }}
    condition:
    - condition: device
      device_id: c26046a34e1fac9463da2e9fe2b62a84
      domain: climate
      entity_id: climate.vpoppe
      type: is_hvac_mode
      hvac_mode: 'off'
    action:
    - device_id: c26046a34e1fac9463da2e9fe2b62a84
      domain: climate
      entity_id: climate.vpoppe
      type: set_hvac_mode
      hvac_mode: cool
    - service: climate.set_temperature
      data:
        temperature: 25
      target:
        entity_id: climate.vpoppe
    mode: single

  - id: '1658673749726'
    alias: Climate VP oppe Turn off when idle for 20 hours
    description: ''
    trigger:
    - platform: numeric_state
      entity_id: sensor.stikk_vp_oppe_power
      for:
        hours: 30
        minutes: 0
        seconds: 0
      below: '50'
    condition:
    - condition: device
      device_id: c26046a34e1fac9463da2e9fe2b62a84
      domain: climate
      entity_id: climate.vpoppe
      type: is_hvac_mode
      hvac_mode: 'cool'
    action:
    - device_id: c26046a34e1fac9463da2e9fe2b62a84
      domain: climate
      entity_id: climate.vpoppe
      type: set_hvac_mode
      hvac_mode: 'off'
    mode: single

  - id: '1663912913996'
    alias: Analyzer-adjust heat-pump upstairs temperature 
    trigger:
      - platform: template
        value_template: >
          {{ now().minute < 59 and state_attr('climate.vp_goppe', 'temperature') + 
             states('sensor.analyzer_updown')|int  +
             (1 if states('binary_sensor.schedule_adjust') == 'on' else 0) != 
             state_attr('climate.vpoppe','temperature') }}
    condition:
      - condition: template
        value_template: >
          {{ states('sensor.analyzer_updown') in ['-1', '0', '1'] }}
      - condition: template
        value_template: >
          {{ trigger.entity_id != 'sensor.analyzer_updown' or 
             trigger.from_state.state in ['-1', '0', '1'] }}
      - condition: template
        value_template: "{{ now().minute < 59 }}"
    action:
      - choose:
        - conditions: 
          - condition: template
            value_template: "{{ states('climate.vpoppe') == 'heat' }}"
          sequence: 
          - service: climate.set_temperature
            data: 
              temperature: >
                {{ state_attr('climate.vp_goppe', 'temperature') + 
                   states('sensor.analyzer_updown')|int +
                   (1 if states('binary_sensor.schedule_adjust') == 'on' else 0)  }}
            target:
              entity_id: climate.vpoppe
        - conditions: 
          - condition: template
            value_template: "{{ states('climate.vpoppe') == 'cool' }}"
          sequence: 
          - service: climate.set_temperature
            data: 
              temperature: >
                {{ state_attr('climate.vp_goppe', 'temperature') - states('sensor.analyzer_updown')|int }}
            target:
              entity_id: climate.vpoppe

  - id: '1663912913997'
    alias: Analyzer-adjust heat-pump downstairs temperature 
    trigger:
      - platform: template
        value_template: >
          {{ now().minute < 59 and state_attr('climate.vp_gnede', 'temperature') + states('sensor.analyzer_updown')|int != 
             state_attr('climate.vpnede','temperature') and states('binary_sensor.zwift_active') == 'off' }}
    condition:
      - condition: state
        entity_id: input_boolean.downstairs_price_adjust
        state: 'on'
      - condition: template
        value_template: >
          {{ states('sensor.analyzer_updown') in ['-1', '0', '1'] }}
      - condition: template
        value_template: >
          {{ trigger.entity_id != 'sensor.analyzer_updown' or 
             trigger.from_state.state in ['-1', '0', '1'] }}
      - condition: template
        value_template: "{{ now().minute < 59 }}"
      - condition: state
        entity_id: climate.vp_gnede
        state: 'heat'
    action:
      - choose:
        - conditions: 
          - condition: template
            value_template: "{{ states('climate.vpnede') == 'heat' }}"
          sequence: 
          - service: climate.set_temperature
            data: 
              temperature: >
                {{ state_attr('climate.vp_gnede', 'temperature') + states('sensor.analyzer_updown')|int }}
            target:
              entity_id: climate.vpnede
        - conditions: 
          - condition: template
            value_template: "{{ states('climate.vpnede') == 'cool' }}"
          sequence: 
          - service: climate.set_temperature
            data: 
              temperature: >
                {{ state_attr('climate.vp_gnede', 'temperature') - states('sensor.analyzer_updown')|int }}
            target:
              entity_id: climate.vpnede

