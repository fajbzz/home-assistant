template:
  sensor: 
  - name: livingroom_temp
    unit_of_measurement: "Â°C"
    state: >
      {% set l = namespace (temp=[]) %}
      {% if not states('sensor.netatmo_rypeveien_netatmo_temperature') in ['unavailible', 'unknown'] %}
      {% set l.temp = l.temp + [ states('sensor.netatmo_rypeveien_netatmo_temperature')|float] %}
      {% endif %}
      {% if not states('sensor.vp_oppe_air_temperature') in  ['unavailible', 'unknown'] and states('sensor.vp_oppe_air_temperature')|float < 50 %}
      {% set l.temp = l.temp + [states('sensor.vp_oppe_air_temperature')|float] %}
      {% endif %}
      {% if not states('sensor.verandador_temperature') in  ['unavailible', 'unknown'] %}
      {% set l.temp = l.temp + [states('sensor.verandador_temperature')|float] %}
      {% endif %}
      {{ l.temp|average|round(1) }}

  binary_sensor:
  - name: hot_outside
    state: "{{ states('sensor.netatmo_rypeveien_netatmo_ute_temperature')|float(default=10) > 25 }}"
    delay_on:
      minutes: 20
  - name: hot_livingroom
    state: >
      {{ states('sensor.netatmo_rypeveien_netatmo_temperature')|float(default=20) > 25 
         or states('sensor.vp_oppe_air_temperature')|float(default=20) > 25}}
    delay_on:
      minutes: 30
    
automation: 
  - id: '1658673475311'
    alias: 'Climate VP Oppe Start cooling '
    description: ''
    trigger:
    - platform: template
      value_template: >
        {{ states('binary_sensor.hot_livingroom') == 'on'
           and states('binary_sensor.hot_outside')  == 'on'
           and states('sensor.pvlogger_power')|int(default=0) > 2000
           and states('binary_sensor.dor_inngang_on') == 'off'
           and states('binary_sensor.verandador_contact') == 'off' }}
    condition:
    - condition: device
      device_id: c26046a34e1fac9463da2e9fe2b62a84
      domain: climate
      entity_id: climate.vp_oppe
      type: is_hvac_mode
      hvac_mode: 'off'
    action:
    - device_id: c26046a34e1fac9463da2e9fe2b62a84
      domain: climate
      entity_id: climate.vp_oppe
      type: set_hvac_mode
      hvac_mode: cool
    - service: climate.set_temperature
      data:
        temperature: 25
      target:
        entity_id: climate.vp_oppe
    mode: single

  - id: '1658673749726'
    alias: Climate VP oppe Turn off when idle for 20 hours
    description: ''
    trigger:
    - platform: numeric_state
      entity_id: sensor.stikk_vp_oppe_power
      for:
        hours: 20
        minutes: 0
        seconds: 0
      below: '50'
    condition:
    - condition: not
      conditions:
      - condition: device
        device_id: c26046a34e1fac9463da2e9fe2b62a84
        domain: climate
        entity_id: climate.vp_oppe
        type: is_hvac_mode
        hvac_mode: 'off'
    action:
    - device_id: c26046a34e1fac9463da2e9fe2b62a84
      domain: climate
      entity_id: climate.vp_oppe
      type: set_hvac_mode
      hvac_mode: 'off'
    mode: single

  - id: '1661848057589'
    alias: Refresh air temp values periodically
    trigger: 
    - platform: time_pattern
      minutes: '/12'
    action: 
    - service: zwave_js.refresh_value
      data:
        entity_id: 
          - sensor.vv_tank_air_temperature
          - sensor.vp_oppe_air_temperature
          - sensor.vp_nede_air_temperature

  - id: '1663912913996'
    alias: Analyzer-adjust heat-pump temperature 
    trigger:
      - platform: template
        value_template: >
          {{ now().minute < 59 and states('input_number.stue_temp')|float + states('sensor.analyzer_updown')|int != 
             state_attr('climate.vp_oppe','temperature') }}
    condition:
      - condition: template
        value_template: >
          {{ states('sensor.analyzer_updown') in ['-1', '0', '1'] }}
      - condition: template
        value_template: >
          {{ trigger.entity_id != 'sensor.analyzer_updown' or 
             trigger.from_state.state in ['-1', '0', '1'] }}
      - condition: template
        value_template: "{{ now().minute < 59 }}"
    action:
      - choose:
        - conditions: 
          - condition: template
            value_template: "{{ states('climate.vp_oppe') == 'heat' }}"
          sequence: 
          - service: climate.set_temperature
            data: 
              temperature: >
                {{ states('input_number.stue_temp')|float + states('sensor.analyzer_updown')|int }}
            target:
              entity_id: climate.vp_oppe
        - conditions: 
          - condition: template
            value_template: "{{ states('climate.vp_oppe') == 'cool' }}"
          sequence: 
          - service: climate.set_temperature
            data: 
              temperature: >
                {{ states('input_number.stue_temp')|float - states('sensor.analyzer_updown')|int }}
            target:
              entity_id: climate.vp_oppe
