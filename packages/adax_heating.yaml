input_boolean:
  homeoffice_monday:
    name: homeoffice_monday
  homeoffice_tuesday:
    name: homeoffice_tuesday
  homeoffice_wednesday:
    name: homeoffice_wednesday
  homeoffice_thursday:
    name: homeoffice_thursday
  homeoffice_friday:
    name: homeoffice_friday
  homeoffice_weekend:
    name: homeoffice_weekend

template: 
  sensor:
  - name: adax_faoff_analyze_temp
    unit_of_measurement: "°C"
    state: "{{ state_attr('climate.kontoret','current_temperature')|float - states('sensor.analyzer_updown')|int }}"
  - name: adax_syrom_analyze_temp
    unit_of_measurement: "°C"
    state: "{{ state_attr('climate.syrommet','current_temperature')|float - states('sensor.analyzer_updown')|int }}"
  - name: adax_guest_analyze_temp
    unit_of_measurement: "°C"
    state: "{{ state_attr('climate.gjesterom','current_temperature')|float - states('sensor.analyzer_updown')|int }}"
  - name: adax_faoff_temp
    unit_of_measurement: "°C"
    state: "{{ state_attr('climate.kontoret','current_temperature') }}"
  - name: adax_syrom_temp
    unit_of_measurement: "°C"
    state: "{{ state_attr('climate.syrommet','current_temperature') }}"
  - name: adax_guest_temp
    unit_of_measurement: "°C"
    state: "{{ state_attr('climate.gjesterom','current_temperature') }}"

  binary_sensor:
    - name: office_at_home
      state: > 
        {% set weekday = now().isoweekday () %}
        {{ (7 <= now().hour < 16) and (
           (states('input_boolean.homeoffice_monday') == 'on' and weekday == 1) or
           (states('input_boolean.homeoffice_tuesday') == 'on' and weekday == 2) or 
           (states('input_boolean.homeoffice_wednesday') == 'on' and weekday == 3) or 
           (states('input_boolean.homeoffice_thursday') == 'on' and weekday == 4) or
           (states('input_boolean.homeoffice_friday') == 'on' and weekday == 5) or
           (states('input_boolean.homeoffice_weekend') == 'on' and (weekday < 1 or weekday > 5)))
        }}

switch:
  - platform: template
    switches:
      adax_faoff:
        turn_on:
        turn_off:
      adax_syrom:
        turn_on:
        turn_off:
      adax_guest:
        turn_on:
        turn_off:

climate:
  - platform: generic_thermostat
    name: adaxg_faoff
    heater: switch.adax_faoff
    target_sensor: sensor.adax_faoff_analyze_temp
    target_temp_step: 1
  - platform: generic_thermostat
    name: adaxg_syrom
    heater: switch.adax_syrom
    target_sensor: sensor.adax_syrom_analyze_temp
    target_temp_step: 1
  - platform: generic_thermostat
    name: adaxg_guest
    heater: switch.adax_guest
    target_sensor: sensor.adax_guest_analyze_temp
    target_temp_step: 1
        
automation:
  - id: '1644843799898'
    alias: Adax varmestyring
    description: ''
    trigger:
    - platform: state
      entity_id: binary_sensor.office_at_home
      from: "off"
      to: "on"
      id: homeoffice_on
    - platform: state
      entity_id: binary_sensor.office_at_home
      from: "on"
      to: "off"
      id: homeoffice_off
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: homeoffice_on
        - condition: numeric_state
          entity_id: climate.adaxg_faoff
          attribute: temperature
          below: '21'
        sequence:
        - service: climate.set_temperature
          data:
            temperature: 21
          target:
            entity_id: climate.adaxg_faoff
      - conditions:
        - condition: numeric_state
          entity_id: climate.adaxg_faoff
          attribute: temperature
          above: '18.9'
        - condition: trigger
          id: homeoffice_off
        sequence:
        - service: climate.set_temperature
          data:
            temperature: 14
          target:
            entity_id: climate.adaxg_faoff
      default: []
    mode: queued
    max: 3

  - id: '1669366403330'
    alias: adjust adax temp according to generic thermostat, hvac action and analyzer_updown
    trigger:
      - platform: state
        entity_id: 
          - climate.adaxg_faoff
          - climate.adaxg_guest
          - climate.adaxg_syrom
        attribute: temperature
      - platform: state
        entity_id: 
          - climate.adaxg_faoff
          - climate.adaxg_guest
          - climate.adaxg_syrom
        attribute: hvac_action
      - platform: state
        entity_id:
          - sensor.analyzer_updown
    action:
      - delay: 
          seconds: 5
      - service: climate.set_temperature
        data: 
          temperature: >
            {% set current = states.climate.kontoret.attributes.current_temperature %}
            {% set action = states.climate.adaxg_faoff.attributes.hvac_action %}
            {% set analyzer = states('sensor.analyzer_updown')|int %}
            {% set gtarget = states.climate.adaxg_faoff.attributes.temperature|float %}
            {% set target = gtarget + analyzer %}
            {{ target + 4 if (action == 'heating') and (current < target - 2) else target }}
        target:
          entity_id: climate.kontoret
      - service: climate.set_temperature
        data: 
          temperature: >
            {% set action = 4 if state_attr('climate.adaxg_guest', 'hvac_action') in ['heating'] else 0 %}
            {{ state_attr('climate.adaxg_guest', 'temperature') + action + states('sensor.analyzer_updown')|int }}
        target:
          entity_id: climate.gjesterom
      - service: climate.set_temperature
        data: 
          temperature: >
            {% set action = 4 if state_attr('climate.adaxg_syrom', 'hvac_action') in ['heating'] else 0 %}
            {{ state_attr('climate.adaxg_syrom', 'temperature') + action + states('sensor.analyzer_updown')|int }}
        target:
          entity_id: climate.syrommet
